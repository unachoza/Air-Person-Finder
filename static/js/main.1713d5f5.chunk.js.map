{"version":3,"sources":["assets/AirHeader.svg","UI/Card/Card.tsx","UI/CardList/CardList.tsx","UI/SearchBox/SearchBox.tsx","App.tsx","constants/constants.js","index.tsx"],"names":["Card","id","name","email","className","alt","src","CardList","people","map","person","username","SearchBox","searchChange","console","log","type","placeholder","onChange","PersonArray","App","useState","setPeople","searchInput","setSearchInput","useEffect","a","fetch","response","json","data","getData","filterPeople","filter","toLowerCase","includes","AirHeader","event","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAAe,MAA0B,sCCyB1BA,G,MAfF,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,GAAIC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,MACxB,OACE,mCACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,qBAEvB,sBAAKG,UAAU,cAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBF,IACvB,8BAAMC,cCDDI,G,MAbE,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,OAClB,OACE,oBAAIJ,UAAU,qBAAd,SACGI,EAAOC,KAAI,SAACC,GACX,OACE,6BACE,cAAC,EAAD,CAAsBT,GAAIS,EAAOT,GAAIC,KAAMQ,EAAOR,KAAMS,SAAUD,EAAOC,SAAUR,MAAOO,EAAOP,OAAtFO,EAAOT,aCIfW,G,MARG,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aAEnB,OADAC,QAAQC,IAAI,CAAEF,iBAEZ,mCACE,uBAAOG,KAAK,OAAOZ,UAAU,YAAYa,YAAY,iBAAiBC,SAAUL,QCKhFM,G,MAAwB,IA+CfC,EA7CH,WAAO,IAAD,EACYC,mBAASF,GADrB,mBACTX,EADS,KACDc,EADC,KAEhBR,QAAQC,IAAI,CAAEP,WAFE,MAGsBa,mBAAS,IAH/B,mBAGTE,EAHS,KAGIC,EAHJ,KAKhBC,qBAAU,YACK,uCAAG,8BAAAC,EAAA,+EAESC,MCvBH,8CDqBN,cAERC,EAFQ,gBAGMA,EAASC,OAHf,gDAG0B,GAH1B,OAGRC,EAHQ,KAIZR,EAAUQ,GAJE,kDAMZhB,QAAQC,IAAI,2BANA,0DAAH,qDAUbgB,KACC,IAEH,IAIMC,EAAexB,EAAOyB,QAAO,SAACvB,GAClC,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAQR,KAAKgC,cAAcC,SAASZ,EAAYW,kBAEzD,OACE,qCACE,wBAAQ9B,UAAU,aAAlB,SACE,qBAAKE,IAAK8B,EAAWnC,GAAG,WAAWI,IAAI,WAEzC,iCACE,qBAAKD,UAAU,QAAf,+BACA,qBAAKA,UAAU,YAAf,4MAKA,cAAC,EAAD,CAAWS,aAnBM,SAACwB,GAEtBb,EAAea,EAAMC,OAAOC,UAkBxB,cAAC,EAAD,CAAU/B,OAAQwB,WEnD1BQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1713d5f5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/AirHeader.356fea8a.svg\";","import React from 'react';\nimport 'UI/Card/Card.styles.css';\n\nexport interface Person {\n  name: string;\n  id: number;\n  username: string;\n  email: string;\n}\n\nconst Card = ({ id, name, email }: Person) => {\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"avatar\">\n          <img alt=\"avatar\" src={`https://robohash.org/${id}?size=200x200`} />\n        </div>\n        <div className=\"description\">\n          <div className=\"name\">{name}</div>\n          <div>{email}</div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Card;\n","import React from 'react';\nimport Card from 'UI/Card/Card';\nimport { Person } from 'App';\nimport 'UI/CardList/CardList.styles.css';\n\nconst CardList = ({ people }: { people: Array<Person> }) => {\n  return (\n    <ul className=\"cardList-container\">\n      {people.map((person) => {\n        return (\n          <li>\n            <Card key={person.id} id={person.id} name={person.name} username={person.username} email={person.email} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default CardList;\n","import React from 'react';\nimport 'UI/SearchBox/SearchBox.styles.css';\n\ninterface ISearchBoxProps {\n  searchChange(event: React.SyntheticEvent<HTMLInputElement>): void;\n}\n\nconst SearchBox = ({ searchChange }: ISearchBoxProps) => {\n  console.log({ searchChange });\n  return (\n    <>\n      <input type=\"text\" className=\"input-box\" placeholder=\"Type a name...\" onChange={searchChange} />\n    </>\n  );\n};\nexport default SearchBox;\n","import React, { useState, useEffect } from 'react';\nimport AirHeader from 'assets/AirHeader.svg';\nimport CardList from 'UI/CardList/CardList';\nimport SearchBox from 'UI/SearchBox/SearchBox';\nimport { ROBOTS_URL } from 'constants/constants';\nimport Loading from 'UI/Loading/Loading';\nimport './App.css';\n\nexport interface Person {\n  name: string;\n  id: number;\n  username: string;\n  email: string;\n}\n// Person[]\n\nconst PersonArray: Person[] = [];\n\nconst App = () => {\n  const [people, setPeople] = useState(PersonArray);\n  console.log({ people });\n  const [searchInput, setSearchInput] = useState('');\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        let response = await fetch(ROBOTS_URL);\n        let data = (await response.json()) || [];\n        setPeople(data);\n      } catch {\n        console.log('oops there was an error');\n      }\n    };\n\n    getData();\n  }, []);\n\n  const onSearchChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    // @ts-ignore\n    setSearchInput(event.target.value);\n  };\n  const filterPeople = people.filter((person: Person) => {\n    return person?.name.toLowerCase().includes(searchInput.toLowerCase());\n  });\n  return (\n    <>\n      <header className=\" fixed-top\">\n        <img src={AirHeader} id=\"app-logo\" alt=\"logo\" />\n      </header>\n      <main>\n        <div className=\"title\">The Person Finder</div>\n        <div className=\"sub-title\">\n          If you just can’t find someone and need to know what they look like, you’ve come to the right place! Just type\n          the name of the person you are looking for below into the search box!\n        </div>\n\n        <SearchBox searchChange={onSearchChange} />\n        <CardList people={filterPeople} />\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","export const MOCK_DATA_URL =\n  'https://s3.us-west-2.amazonaws.com/secure.notion-static.com/090639df-57c7-4fd7-9472-67e00f8aa05f/MOCK_DATA_%282%29.json?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210101%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210101T224636Z&X-Amz-Expires=86400&X-Amz-Signature=e11169ac4cf77fec5f5149d2100fe738bf8859aab340cb9255178466cb7025fb&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22MOCK_DATA%2520%282%29.json%22';\n\nexport const ROBOTS_URL = 'https://jsonplaceholder.typicode.com/users';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}