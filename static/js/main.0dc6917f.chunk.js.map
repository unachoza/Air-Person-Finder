{"version":3,"sources":["assets/AirHeader.svg","UI/Card/Card.tsx","UI/CardList/CardList.tsx","UI/SearchBox/SearchBox.tsx","UI/Loading/Loading.tsx","App.tsx","constants/constants.js","index.tsx"],"names":["Card","id","name","email","className","alt","src","CardList","people","length","map","person","username","SearchBox","searchChange","type","placeholder","onChange","Loading","Array","fill","PersonArray","App","useState","setPeople","searchInput","setSearchInput","loading","error","userRequest","setUserRequest","useEffect","a","fetch","response","json","data","getData","filterPeople","filter","toLowerCase","includes","AirHeader","event","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAAe,MAA0B,sCCyB1BA,G,MAfF,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,GAAIC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,MACxB,OACE,mCACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,qBAEvB,sBAAKG,UAAU,cAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBF,IACvB,8BAAMC,cCKDI,G,MAnBE,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,OAClB,OACE,mCACGA,EAAOC,OAAS,EACf,qBAAKL,UAAU,gBAAf,6BAEA,oBAAIA,UAAU,qBAAd,SACGI,EAAOE,KAAI,SAACC,GACX,OACE,6BACE,cAAC,EAAD,CAAMV,GAAIU,EAAOV,GAAIC,KAAMS,EAAOT,KAAMU,SAAUD,EAAOC,SAAUT,MAAOQ,EAAOR,SAD1EQ,EAAOV,aCAfY,G,MAPG,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aACnB,OACE,mCACE,uBAAOC,KAAK,OAAOX,UAAU,YAAYY,YAAY,iBAAiBC,SAAUH,QCHvEI,G,MAJC,WACd,OAAO,qBAAKd,UAAU,eAAf,SAA+Be,MAAM,IAAIC,KAAK,6BCgBjDC,G,MAAwB,IAgDfC,EA9CH,WAAO,IAAD,EACYC,mBAASF,GADrB,mBACTb,EADS,KACDgB,EADC,OAEsBD,mBAAS,IAF/B,mBAETE,EAFS,KAEIC,EAFJ,OAGsBH,mBAAS,CAAEI,SAAS,EAAOC,OAAO,IAHxD,mBAGTC,EAHS,KAGIC,EAHJ,KAKhBC,qBAAU,YACK,uCAAG,8BAAAC,EAAA,sEAEZF,EAAe,CAAEH,SAAS,EAAMC,OAAO,IAF3B,SAGSK,MC5BH,8CDyBN,cAGRC,EAHQ,gBAIMA,EAASC,OAJf,iDAI0B,GAJ1B,QAIRC,EAJQ,KAKZZ,EAAUY,GACVN,EAAe,CAAEH,SAAS,EAAOC,OAAO,IAN5B,kDAQZE,EAAe,CAAEH,SAAS,EAAOC,OAAO,IAR5B,0DAAH,qDAWbS,KACC,IAEH,IAGMC,EAAe9B,EAAO+B,QAAO,SAAC5B,GAClC,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAQT,KAAKsC,cAAcC,SAAShB,EAAYe,kBAEzD,OACE,qCACE,wBAAQpC,UAAU,aAAlB,SACE,qBAAKE,IAAKoC,EAAWzC,GAAG,WAAWI,IAAI,WAEzC,iCACE,qBAAKD,UAAU,QAAf,+BACA,qBAAKA,UAAU,YAAf,SClDc,oMDmDd,cAAC,EAAD,CAAWU,aAdM,SAAC6B,GACtBjB,EAAeiB,EAAMC,OAAOC,UAcvBhB,EAAYF,SAAW,cAAC,EAAD,IACvBE,EAAYD,MACX,qBAAKxB,UAAU,gBAAf,uDAEA,cAAC,EAAD,CAAUI,OAAQ8B,WEvD5BQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0dc6917f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/AirHeader.356fea8a.svg\";","import React from 'react';\nimport 'UI/Card/Card.styles.css';\n\nexport interface Person {\n  name: string;\n  id: number;\n  username: string;\n  email: string;\n}\n\nconst Card = ({ id, name, email }: Person) => {\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"avatar\">\n          <img alt=\"avatar\" src={`https://robohash.org/${id}?size=200x200`} />\n        </div>\n        <div className=\"description\">\n          <div className=\"name\">{name}</div>\n          <div>{email}</div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Card;\n","import React from 'react';\nimport Card from 'UI/Card/Card';\nimport { Person } from 'App';\nimport 'UI/CardList/CardList.styles.css';\n\nconst CardList = ({ people }: { people: Array<Person> }) => {\n  return (\n    <>\n      {people.length < 1 ? (\n        <div className=\"error-message\">oops no results</div>\n      ) : (\n        <ul className=\"cardList-container\">\n          {people.map((person) => {\n            return (\n              <li key={person.id}>\n                <Card id={person.id} name={person.name} username={person.username} email={person.email} />\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default CardList;\n","import React from 'react';\nimport 'UI/SearchBox/SearchBox.styles.css';\n\ninterface ISearchBoxProps {\n  searchChange(event: React.SyntheticEvent<HTMLInputElement>): void;\n}\n\nconst SearchBox = ({ searchChange }: ISearchBoxProps) => {\n  return (\n    <>\n      <input type=\"text\" className=\"input-box\" placeholder=\"Type a name...\" onChange={searchChange} />\n    </>\n  );\n};\nexport default SearchBox;\n","import React from 'react';\nimport 'UI/Loading/Loading.styles.css';\n\nconst Loading = (): JSX.Element => {\n  return <div className=\"load-spinner\">{Array(10).fill(<div></div>)}</div>;\n};\n\nexport default Loading;\n","import React, { useState, useEffect } from 'react';\nimport AirHeader from 'assets/AirHeader.svg';\nimport CardList from 'UI/CardList/CardList';\nimport SearchBox from 'UI/SearchBox/SearchBox';\nimport { ROBOTS_URL, SUB_TITLE } from 'constants/constants';\nimport Loading from 'UI/Loading/Loading';\nimport './App.css';\n\nexport interface Person {\n  name: string;\n  id: number;\n  username: string;\n  email: string;\n}\n\ninterface UserRequest {\n  error: boolean;\n  loading: boolean;\n}\n\nconst PersonArray: Person[] = [];\n\nconst App = () => {\n  const [people, setPeople] = useState(PersonArray);\n  const [searchInput, setSearchInput] = useState('');\n  const [userRequest, setUserRequest] = useState({ loading: false, error: false });\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setUserRequest({ loading: true, error: false });\n        let response = await fetch(ROBOTS_URL);\n        let data = (await response.json()) || [];\n        setPeople(data);\n        setUserRequest({ loading: false, error: false });\n      } catch {\n        setUserRequest({ loading: false, error: true });\n      }\n    };\n    getData();\n  }, []);\n\n  const onSearchChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setSearchInput(event.target.value);\n  };\n  const filterPeople = people.filter((person: Person) => {\n    return person?.name.toLowerCase().includes(searchInput.toLowerCase());\n  });\n  return (\n    <>\n      <header className=\" fixed-top\">\n        <img src={AirHeader} id=\"app-logo\" alt=\"logo\" />\n      </header>\n      <main>\n        <div className=\"title\">The Person Finder</div>\n        <div className=\"sub-title\">{SUB_TITLE}</div>\n        <SearchBox searchChange={onSearchChange} />\n        {userRequest.loading && <Loading />}\n        {userRequest.error ? (\n          <div className=\"error-message\">Oops there was an error! Please refresh! </div>\n        ) : (\n          <CardList people={filterPeople} />\n        )}\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","export const MOCK_DATA_URL =\n  'https://s3.us-west-2.amazonaws.com/secure.notion-static.com/090639df-57c7-4fd7-9472-67e00f8aa05f/MOCK_DATA_%282%29.json?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210101%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210101T224636Z&X-Amz-Expires=86400&X-Amz-Signature=e11169ac4cf77fec5f5149d2100fe738bf8859aab340cb9255178466cb7025fb&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22MOCK_DATA%2520%282%29.json%22';\n\nexport const ROBOTS_URL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const SUB_TITLE = `If you just can’t find someone and need to know what they look like, you’ve come to the right place! Just type\nthe name of the person you are looking for below into the search box!`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}